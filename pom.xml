<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.example.jpa</groupId>
	<artifactId>TestJpa</artifactId>
	<version>1.0</version>
	<packaging>pom</packaging>

	<name>TestJpa</name>
	<url>http://maven.apache.org</url>

	<!-- All these properties defined here get inherited to all child maven 
		modules -->
	<!-- Rather, there is no way NOT to inherit these properties to child maven 
		modules -->
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- Java Version -->
		<java.version>1.7</java.version>

		<!-- J2EE Version -->
		<javaee-api-version>6.0</javaee-api-version>

		<!-- Ejb Version -->
		<ejb.verion>3.2</ejb.verion>

		<!-- Maven Plugin versions -->
		<maven.ejb.plugin.verion>2.5.1</maven.ejb.plugin.verion>
		<maven.war.plugin.version>3.0.0</maven.war.plugin.version>
		<maven.ear.plugin.version>2.10.1</maven.ear.plugin.version>

		<project.groupId>com.example.jpa</project.groupId>
		<project.version>1.0</project.version>

		<!-- Maven Dependency version -->
		<apache.commons.file-upload.version>1.3.2</apache.commons.file-upload.version>

		<!-- application.xml version -->
		<application.xml.version>6</application.xml.version>

		<!-- Quartz version -->
		<quartz.version>2.2.1</quartz.version>


	</properties>

	<!-- Using dependencyManagement so that these dependency configuration will 
		be shared by all child maven modules -->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>3.8.1</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>1.2.17</version>
			</dependency>

			<!-- keeping scope of this dependecy to 'provided' because no need to 
				package these jars to artifact, because container will provide all these 
				APIs runtime -->
			<!-- Making it provided will be used to just compile them -->
			<dependency>
				<groupId>javax</groupId>
				<artifactId>javaee-api</artifactId>
				<version>${javaee-api-version}</version>
				<scope>provided</scope>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<!-- Compiler Plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.6.1</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<modules>
		<module>TestEjbJpa</module>
		<module>TestJpaWeb</module>
		<module>TestJpaEar</module>
		<module>TestPojo</module>
		<module>CommonResources</module>
	</modules>
</project>
